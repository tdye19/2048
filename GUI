package Game1024;

import java.awt.EventQueue;

import javax.swing.JFrame;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import javax.swing.JPanel;
import java.awt.GridLayout;
import javax.swing.JButton;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JTable;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JLabel;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import javax.swing.JInternalFrame;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.SwingConstants;
import com.jgoodies.forms.layout.FormLayout;
import com.jgoodies.forms.layout.ColumnSpec;
import com.jgoodies.forms.layout.RowSpec;
import com.jgoodies.forms.layout.FormSpecs;

public class NumberGUI {

	private JFrame frame;
	private NumberGame game;
	private int grid[][];

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					NumberGUI window = new NumberGUI();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public NumberGUI() {
		initialize();
	}
	private void renderBoard() {
		/* reset all the 2D array elements to ZERO */
		for (int k = 0; k < grid.length; k++)
			for (int m = 0; m < grid[k].length; m++)
				grid[k][m] = 0;
		/* fill in the 2D array using information for non-empty tiles */
		for (Cell c : game.getNonEmptyTiles())
			grid[c.row][c.column] = c.value;
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		
		game.placeRandomValue();
		game.placeRandomValue();
		renderBoard();
		frame = new JFrame();
		frame.setBounds(100, 100, 700, 600);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(new BorderLayout(0, 0));
		
		JPanel panel = new JPanel();
		frame.getContentPane().add(panel, BorderLayout.CENTER);
		panel.setLayout(new GridLayout(1, 0, 0, 0));
		
		JPanel panel_1 = new JPanel();
		frame.getContentPane().add(panel_1, BorderLayout.SOUTH);
		
		JButton btnNewButton_3 = new JButton("Up");
		
		btnNewButton_3.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				game.slide(SlideDirection.UP);
				renderBoard();
			}
		});
		btnNewButton_3.setVerticalAlignment(SwingConstants.BOTTOM);
		panel_1.add(btnNewButton_3);
		
		JButton btnNewButton = new JButton("Down");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		btnNewButton.setVerticalAlignment(SwingConstants.BOTTOM);
		btnNewButton.setHorizontalAlignment(SwingConstants.RIGHT);
		panel_1.add(btnNewButton);
		
		JButton btnNewButton_1 = new JButton("Left");
		btnNewButton_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		btnNewButton_1.setVerticalAlignment(SwingConstants.BOTTOM);
		panel_1.add(btnNewButton_1);
		
		JButton btnNewButton_2 = new JButton("Right");
		btnNewButton_2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
			}
		});
		btnNewButton_2.setVerticalAlignment(SwingConstants.BOTTOM);
		panel_1.add(btnNewButton_2);
		
	}

}
